# -*- coding: utf-8 -*-
# Auto-generated by Stone, do not modify.
# @generated
# flake8: noqa
# pylint: skip-file

from typing import (
    Callable,
    Text,
    Type,
    TypeVar,
)
from stone.backends.python_rsrc import stone_base as bb  # type: ignore
from stone.backends.python_rsrc import stone_validators as bv  # type: ignore

T = TypeVar('T', bound=bb.AnnotationType)
U = TypeVar('U')

class PlatformType(bb.Union):
    web: PlatformType = ...
    desktop: PlatformType = ...
    mobile_ios: PlatformType = ...
    mobile_android: PlatformType = ...
    api: PlatformType = ...
    unknown: PlatformType = ...
    mobile: PlatformType = ...
    other: PlatformType = ...

    def is_web(self) -> bool: ...

    def is_desktop(self) -> bool: ...

    def is_mobile_ios(self) -> bool: ...

    def is_mobile_android(self) -> bool: ...

    def is_api(self) -> bool: ...

    def is_unknown(self) -> bool: ...

    def is_mobile(self) -> bool: ...

    def is_other(self) -> bool: ...

    def _process_custom_annotations(
        self,
        annotation_type: Type[T],
        field_path: Text,
        processor: Callable[[T, U], U],
    ) -> None: ...

PlatformType_validator: bv.Validator = ...

